group 'com.natpryce'
version(hasProperty("-version") ? property("-version") : "SNAPSHOT")

println "building version ${version}"


buildscript {
    ext.kotlin_version = '1.4.10'
    ext.http4k_version = '3.277.0'
    ext.junit_version = "5.4.2"
    ext.junit_platform_version = "1.4.2"
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile("org.http4k:http4k-core:$http4k_version") {
        exclude group: "org.jetbrains.kotlin"
    }
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile 'com.natpryce:hamkrest:1.4.2.0'
    testCompile("org.http4k:http4k-testing-hamkrest:$http4k_version") {
        exclude group: "org.jetbrains.kotlin"
    }
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testCompile("dev.minutest:minutest:1.7.0") {
        exclude group: "org.jetbrains.kotlin"
    }

    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testRuntime "org.junit.platform:junit-platform-launcher:$junit_platform_version"

}

jar {
    manifest {
        attributes 'Implementation-Title': 'krouton',
                'Implementation-Vendor': 'com.natpryce',
                'Implementation-Version': version
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from 'build/javadoc'
}

test {
    useJUnitPlatform {
        includeEngines 'minutest'
    }
    beforeTest { desc ->
        print desc.name
    }
    afterTest { desc, result ->
        println " -> ${result.resultType}"
    }
}


artifacts {
    archives javadocJar
}

signing {
    required { hasProperty("sign") || gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task ossrhAuthentication {
    doLast {
        if (!(project.hasProperty('ossrh.username') && project.hasProperty('ossrh.password'))) {
            throw new InvalidUserDataException("no OSSRH username and/or password!")
        }
    }
}

uploadArchives {
    dependsOn ossrhAuthentication

    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.properties["ossrh.username"],
                        password: project.properties["ossrh.password"])
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.properties["ossrh.username"],
                        password: project.properties["ossrh.password"])
            }

            pom.project {
                name 'Krouton'
                packaging 'jar'
                description 'Type-safe and compositional URL routing and reverse routing'
                url 'https://github.com/npryce/krouton'

                scm {
                    connection 'git@github.com:npryce/krouton.git'
                    url 'https://github.com/npryce/krouton'
                }

                licenses {
                    license {
                        name 'Apache 2.0'
                        url 'http://opensource.org/licenses/Apache-2.0'
                    }
                }

                developers {
                    developer {
                        id 'npryce'
                        name 'Nat Pryce'
                    }
                }
            }
        }
    }
}

wrapper {
    gradleVersion = '5.4.1'
}

